{"version":3,"file":"static/js/774.e3efdb26.chunk.js","mappings":"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","sources":["api.js","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '092bcb29ccd47efc5792e9a4733d23fe';\n\nasync function fetchMovies() {\n  // eslint-disable-next-line no-undef\n  const responce = await axios(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n  return responce;\n}\nasync function fetchMoviesById(id) {\n  const responce = await axios(`${BASE_URL}movie/${id}?api_key=${API_KEY}`);\n  return responce;\n}\nasync function fetchMovieCredits(id) {\n  const responce = await axios(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`\n  );\n  return responce;\n}\n\nasync function fetchMovieReviews(id) {\n  const responce = await axios(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  return responce;\n}\n\nasync function fetchSearchMovie(query) {\n  const responce = await axios(\n    `${BASE_URL}search/movie?query=${query}&api_key=${API_KEY}&page=1&include_adult=false`\n  );\n  return responce;\n}\n\nexport {\n  fetchMovies,\n  fetchMoviesById,\n  fetchMovieCredits,\n  fetchMovieReviews,\n  fetchSearchMovie,\n};\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const List = styled.ul`\n  padding-left: 20px;\n  display: flex;\n  gap: 4px;\n  flex-direction: column;\n  margin-top: 15px;\n  list-style-type: upper-roman;\n  list-style-position: inside;\n`;\n\nexport const StyledLink = styled(NavLink)`\n  margin-left: 10px;\n  text-decoration: none;\n  color: black;\n  margin-right: auto;\n  outline: none;\n  display: flex;\n  gap: 4px;\n  align-items: center;\n\n  :hover,\n  :focus {\n    color: orange;\n    text-decoration: underline;\n  }\n`;\n","import { List, StyledLink } from './MovieList.styled';\nimport { VscCircleFilled } from 'react-icons/vsc';\nimport { useLocation } from 'react-router-dom';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n  const { pathname, search } = location;\n\n  return (\n    <List>\n      {movies &&\n        movies.map(({ id, name, title }) => (\n          <StyledLink\n            to={`/movies:${id}`}\n            state={{ from: { pathname, search }, id }}\n            key={id}\n          >\n            <VscCircleFilled size=\"14px\" />\n            {name || title}\n          </StyledLink>\n        ))}\n\n      {search !== '' && movies.length === 0 && (\n        <p>No found movies on this query</p>\n      )}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.div`\n  margin-right: auto;\n  margin-left: 15px;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  gap: 4px;\n\n  & input {\n    padding: 1px 8px;\n    width: 200px;\n    border-radius: 3px;\n    border-width: 1px;\n    height: 19px;\n  }\n  & button {\n    border: 1px solid #000000;\n    border-radius: 3px;\n    width: 22px;\n    height: 22px;\n    display: flex;\n    align-items: center;\n    background-color: #ffffff;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n  }\n\n  img {\n    width: 18px;\n    height: 18px;\n    transition: transform 300ms;\n  }\n  img:hover {\n    transform: scale(1.2);\n  }\n`;\n","import search from './search.png';\nimport { List } from './SearchBox.styled';\nexport const SearchBox = ({ onSubmit }) => {\n  const handleSubmit = event => {\n    event.preventDefault();\n    const searchQuery = event.currentTarget.query.value.trim();\n    if (searchQuery === '') {\n      return;\n    }\n    onSubmit(searchQuery);\n    event.currentTarget.reset();\n  };\n  return (\n    <>\n      <form autoComplete=\"off\" onSubmit={handleSubmit}>\n        <List>\n          <input type=\"text\" name=\"query\"></input>\n\n          <button type=\"submit\">\n            <img src={search} alt=\"icon search\" />\n          </button>\n        </List>\n      </form>\n    </>\n  );\n};\n","import { fetchSearchMovie } from 'api';\nimport { Loader } from 'components/Loader/Loader';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { SearchBox } from 'components/SearchBox/SearchBox';\nimport { Suspense, useEffect } from 'react';\nimport { useState } from 'react';\n\nimport { Outlet, useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query');\n\n  const handleSubmit = searchQuery => {\n    if (searchQuery !== '' && searchQuery !== query) {\n      setSearchParams({ query: searchQuery });\n      window.sessionStorage.setItem('searchQuery', JSON.stringify(searchQuery));\n    }\n  };\n\n  useEffect(() => {\n    if (!query) {\n      const searchQuery = JSON.parse(\n        window.sessionStorage.getItem('searchQuery')\n      );\n      if (searchQuery) {\n        setSearchParams({ query: searchQuery });\n      }\n      return;\n    }\n\n    fetchSearchMovie(query).then(data => {\n      setMovies(data.data.results);\n    });\n  }, [query, setSearchParams]);\n\n  return (\n    <main>\n      <SearchBox onSubmit={handleSubmit} />\n      <MovieList movies={movies} />\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n\nexport default Movies;\n"],"names":["BASE_URL","API_KEY","fetchMovies","axios","responce","fetchMoviesById","id","fetchMovieCredits","fetchMovieReviews","fetchSearchMovie","query","List","styled","StyledLink","NavLink","MovieList","movies","location","useLocation","pathname","search","map","name","title","to","state","from","size","length","SearchBox","onSubmit","autoComplete","event","preventDefault","searchQuery","currentTarget","value","trim","reset","type","src","alt","useState","setMovies","useSearchParams","searchParams","setSearchParams","get","useEffect","then","data","results","JSON","parse","window","sessionStorage","getItem","setItem","stringify","Suspense","fallback","Loader"],"sourceRoot":""}