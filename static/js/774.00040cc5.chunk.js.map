{"version":3,"file":"static/js/774.00040cc5.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.jsx","pages/Movies.jsx","services/api.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const List = styled.ul`\n  padding-left: 20px;\n  display: flex;\n  gap: 4px;\n  flex-direction: column;\n  margin-top: 15px;\n  list-style-type: upper-roman;\n  list-style-position: inside;\n`;\n\nexport const StyledLink = styled(NavLink)`\n  margin-left: 10px;\n  text-decoration: none;\n  color: black;\n  margin-right: auto;\n  outline: none;\n  display: flex;\n  gap: 4px;\n  align-items: center;\n\n  :hover,\n  :focus {\n    color: orange;\n    text-decoration: underline;\n  }\n`;\n","import { List, StyledLink } from './MovieList.styled';\nimport { VscCircleFilled } from 'react-icons/vsc';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n  const { pathname, search } = location;\n\n  return (\n    <List>\n      {movies &&\n        movies.map(({ id, name, title }) => (\n          <StyledLink\n            to={`/movies:${id}`}\n            state={{ from: { pathname, search }, id }}\n            key={id}\n          >\n            <VscCircleFilled size=\"14px\" />\n            {name || title}\n          </StyledLink>\n        ))}\n\n      {search !== '' && movies.length === 0 && (\n        <p>No found movies on this query</p>\n      )}\n    </List>\n  );\n};\n\nMovieList.prototype = {\n  movies: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.div`\n  margin-right: auto;\n  margin-left: 15px;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  gap: 4px;\n\n  & input {\n    padding: 1px 8px;\n    width: 200px;\n    border-radius: 3px;\n    border-width: 1px;\n    height: 19px;\n  }\n  & button {\n    ${'' /* border: 1px solid #000000; */}\n    ${'' /* border-radius: 3px; */}\n    border: none;\n    width: 22px;\n    height: 22px;\n    display: flex;\n    align-items: center;\n    background-color: #ffffff;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n  }\n\n  img {\n    width: 18px;\n    height: 18px;\n    transition: transform 300ms;\n  }\n  img:hover {\n    transform: scale(1.2);\n  }\n`;\n","import search from '../../images/search.png';\nimport { List } from './SearchBox.styled';\nimport PropTypes from 'prop-types';\n\nexport const SearchBox = ({ onSubmit }) => {\n  const handleSubmit = event => {\n    event.preventDefault();\n    const searchQuery = event.currentTarget.query.value.trim();\n\n    if (searchQuery === '') {\n      return;\n    }\n\n    onSubmit(searchQuery);\n    event.currentTarget.reset();\n  };\n  return (\n    <>\n      <form autoComplete=\"off\" onSubmit={handleSubmit}>\n        <List>\n          <input type=\"text\" name=\"query\"></input>\n\n          <button type=\"submit\">\n            <img src={search} alt=\"icon search\" />\n          </button>\n        </List>\n      </form>\n    </>\n  );\n};\n\nSearchBox.prototype = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { fetchSearchMovie } from 'services/api';\nimport { Loader } from 'components/Loader/Loader';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { SearchBox } from 'components/SearchBox/SearchBox';\nimport { Suspense, useEffect } from 'react';\nimport { useState } from 'react';\n\nimport { Outlet, useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query');\n\n  const handleSubmit = searchQuery => {\n    if (searchQuery !== '' && searchQuery !== query) {\n      setSearchParams({ query: searchQuery });\n      setMovies([]);\n      setIsLoading(false);\n      window.sessionStorage.setItem('searchQuery', JSON.stringify(searchQuery));\n    }\n  };\n\n  useEffect(() => {\n    if (!query) {\n      const searchQuery = JSON.parse(\n        window.sessionStorage.getItem('searchQuery')\n      );\n\n      if (searchQuery) {\n        setSearchParams({ query: searchQuery });\n\n        const storageMovies = JSON.parse(\n          window.sessionStorage.getItem('searchMovies')\n        );\n        setMovies(storageMovies);\n      }\n\n      return;\n    }\n    if (movies.length !== 0) {\n      setIsLoading('resolved');\n      return;\n    }\n    setIsLoading('pending');\n\n    fetchSearchMovie(query)\n      .then(data => {\n        setMovies(data.data.results);\n\n        window.sessionStorage.setItem(\n          'searchMovies',\n          JSON.stringify(data.data.results)\n        );\n        if (data.data.total_result === 0) {\n          setIsLoading('rejected');\n          setSearchParams({ query: '' });\n          setMovies([]);\n\n          return;\n        }\n        setIsLoading('resolved');\n      })\n      .catch(error => console(error));\n  }, [query, movies, setSearchParams, isLoading]);\n\n  return (\n    <main>\n      <SearchBox onSubmit={handleSubmit} />\n      {isLoading === 'pending' && <Loader />}\n      {isLoading === 'resolved' && <MovieList movies={movies} />}\n\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '092bcb29ccd47efc5792e9a4733d23fe';\n\nasync function fetchMovies() {\n  // eslint-disable-next-line no-undef\n  const responce = await axios(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n  return responce;\n}\nasync function fetchMoviesById(id) {\n  const responce = await axios(`${BASE_URL}movie/${id}?api_key=${API_KEY}`);\n  return responce;\n}\nasync function fetchMovieCredits(id) {\n  const responce = await axios(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`\n  );\n  return responce;\n}\n\nasync function fetchMovieReviews(id) {\n  const responce = await axios(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  return responce;\n}\n\nasync function fetchSearchMovie(query) {\n  const responce = await axios(\n    `${BASE_URL}search/movie?query=${query}&api_key=${API_KEY}&page=1&include_adult=false`\n  );\n  return responce;\n}\n\nexport {\n  fetchMovies,\n  fetchMoviesById,\n  fetchMovieCredits,\n  fetchMovieReviews,\n  fetchSearchMovie,\n};\n"],"names":["List","styled","StyledLink","NavLink","MovieList","movies","location","useLocation","pathname","search","map","id","name","title","to","state","from","size","length","prototype","PropTypes","isRequired","SearchBox","onSubmit","autoComplete","event","preventDefault","searchQuery","currentTarget","query","value","trim","reset","type","src","alt","useState","setMovies","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","get","useEffect","fetchSearchMovie","then","data","results","window","sessionStorage","setItem","JSON","stringify","total_result","catch","error","console","parse","getItem","storageMovies","Loader","Suspense","fallback","BASE_URL","API_KEY","fetchMovies","axios","responce","fetchMoviesById","fetchMovieCredits","fetchMovieReviews"],"sourceRoot":""}