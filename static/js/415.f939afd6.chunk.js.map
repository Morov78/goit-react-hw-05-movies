{"version":3,"file":"static/js/415.f939afd6.chunk.js","mappings":"4MAGaA,EAAOC,EAAAA,GAAAA,GAAH,+LAUJC,GAAaD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,4Q,+CCRVG,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpBC,GAAWC,EAAAA,EAAAA,MACTC,EAAqBF,EAArBE,SAAUC,EAAWH,EAAXG,OAElB,OACE,UAACT,EAAD,WACGK,GACCA,EAAOK,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MAAb,OACT,UAACX,EAAD,CACEY,GAAE,kBAAaH,GACfI,MAAO,CAAEC,KAAM,CAAER,SAAAA,EAAUC,OAAAA,GAAUE,GAAAA,GAFvC,WAKE,SAAC,MAAD,CAAiBM,KAAK,SACrBL,GAAQC,IAHJF,EAJE,IAWD,KAAXF,GAAmC,IAAlBJ,EAAOa,SACvB,2DAIP,EAEDd,EAAUe,UAAY,CACpBd,OAAQe,IAAAA,QAAkBA,IAAAA,OAAAA,YAA6BC,W,4FCHzD,UAvBa,WACX,OAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOjB,EAAP,KAAekB,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KAYA,OAVAC,EAAAA,EAAAA,YAAU,WACRD,EAAa,YACbE,EAAAA,EAAAA,MACGC,MAAK,SAAAC,GACJN,EAAUM,EAASC,KAAKC,SACxBN,EAAa,WACd,IACAO,OAAM,SAAAC,GAAK,OAAIC,QAAQD,EAAZ,GACf,GAAE,KAGD,kBAAME,MAAO,CAAEC,WAAY,QAA3B,WACE,2CACe,YAAdZ,IAA2B,SAAC,IAAD,IACb,aAAdA,IAA4B,SAAC,IAAD,CAAWnB,OAAQA,MAGrD,C,mMCrBKgC,E,MAAaC,GAAAA,OAAa,CAC9BC,QAJe,gCAKfC,aAAc,OACdC,OAAQ,CACNC,QANY,sC,SAWDf,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,C,aAAf,O,oBAAA,6GAE2BU,EAAW,qBAAsB,CACtDI,OAAQ,CAAEE,KAAM,KAHtB,cAEUd,EAFV,yBAKWA,GALX,gCAOIK,QAAQU,IAAR,sCAPJ,yFAYeC,EAAe,GAAfA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,C,aAAf,O,oBAAA,WAA8BlC,GAA9B,gGAE2B0B,EAAW,SAAD,OAAU1B,IAF/C,cAEUkB,EAFV,yBAGWA,GAHX,gCAKIK,QAAQU,IAAR,sCALJ,yFAUeE,EAAsB,GAAtBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,C,aAAf,O,oBAAA,WAAqCnC,GAArC,gGAE2B0B,EAAW,SAAD,OAAU1B,EAAV,aAFrC,cAEUkB,EAFV,yBAGWA,GAHX,gCAKIK,QAAQU,IAAR,sCALJ,yFAUeG,EAAsB,GAAtBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,C,aAAf,O,oBAAA,WAAqCpC,GAArC,gGAE2B0B,EAAW,SAAD,OAAU1B,EAAV,aAFrC,cAEUkB,EAFV,yBAGWA,GAHX,gCAKIK,QAAQU,IAAR,sCALJ,yFAUeI,EAAkB,GAAlBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAiCC,GAAjC,gGAE2BZ,EAAW,eAAgB,CAChDI,OAAQ,CAAEQ,MAAAA,EAAON,KAAM,EAAGO,eAAe,KAH/C,cAEUrB,EAFV,yBAKWA,GALX,gCAOIK,QAAQU,IAAR,sCAPJ,gF","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","pages/Home.jsx","services/api.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const List = styled.ul`\n  padding-left: 20px;\n  display: flex;\n  gap: 4px;\n  flex-direction: column;\n  margin-top: 15px;\n  list-style-type: upper-roman;\n  list-style-position: inside;\n`;\n\nexport const StyledLink = styled(NavLink)`\n  margin-left: 10px;\n  text-decoration: none;\n  color: black;\n  margin-right: auto;\n  outline: none;\n  display: flex;\n  gap: 4px;\n  align-items: center;\n\n  :hover,\n  :focus {\n    color: orange;\n    text-decoration: underline;\n  }\n`;\n","import { List, StyledLink } from './MovieList.styled';\nimport { VscCircleFilled } from 'react-icons/vsc';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n  const { pathname, search } = location;\n\n  return (\n    <List>\n      {movies &&\n        movies.map(({ id, name, title }) => (\n          <StyledLink\n            to={`/movies:${id}`}\n            state={{ from: { pathname, search }, id }}\n            key={id}\n          >\n            <VscCircleFilled size=\"14px\" />\n            {name || title}\n          </StyledLink>\n        ))}\n\n      {search !== '' && movies.length === 0 && (\n        <p>No found movies on this query</p>\n      )}\n    </List>\n  );\n};\n\nMovieList.prototype = {\n  movies: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n};\n","import { fetchTrendMovies } from 'services/api';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { useEffect, useState } from 'react';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Home = () => {\n  const [movies, setMovies] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading('pending');\n    fetchTrendMovies()\n      .then(responce => {\n        setMovies(responce.data.results);\n        setIsLoading('resolved');\n      })\n      .catch(error => console(error));\n  }, []);\n\n  return (\n    <main style={{ marginLeft: '15px' }}>\n      <h1>Trending today</h1>\n      {isLoading === 'pending' && <Loader />}\n      {isLoading === 'resolved' && <MovieList movies={movies} />}\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '092bcb29ccd47efc5792e9a4733d23fe';\n\nconst fetchAxios = axios.create({\n  baseURL: BASE_URL,\n  responseType: 'json',\n  params: {\n    api_key: API_KEY,\n  },\n});\n\n//Запит інформації про популярнці фільми за день\nasync function fetchTrendMovies() {\n  try {\n    const responce = await fetchAxios('trending/movie/day', {\n      params: { page: 1 },\n    });\n    return responce;\n  } catch (error) {\n    console.log(`Axios request failed ${error}`);\n  }\n}\n\n//запит інформації про фільм по id\nasync function fetchMovieById(id) {\n  try {\n    const responce = await fetchAxios(`movie/${id}`);\n    return responce;\n  } catch (error) {\n    console.log(`Axios request failed ${error}`);\n  }\n}\n\n//запит інформації про акторський склад для сторінки кінофільму по id\nasync function fetchCreditsMovieById(id) {\n  try {\n    const responce = await fetchAxios(`movie/${id}/credits`);\n    return responce;\n  } catch (error) {\n    console.log(`Axios request failed ${error}`);\n  }\n}\n\n//запит оглядів для сторінки кінофільму по id\nasync function fetchReviewsMovieById(id) {\n  try {\n    const responce = await fetchAxios(`movie/${id}/reviews`);\n    return responce;\n  } catch (error) {\n    console.log(`Axios request failed ${error}`);\n  }\n}\n\n//запит на пошук фільмів\nasync function fetchMovieByQuery(query) {\n  try {\n    const responce = await fetchAxios('search/movie', {\n      params: { query, page: 1, include_adult: false },\n    });\n    return responce;\n  } catch (error) {\n    console.log(`Axios request failed ${error}`);\n  }\n}\n\nexport {\n  fetchTrendMovies,\n  fetchMovieById,\n  fetchMovieByQuery,\n  fetchCreditsMovieById,\n  fetchReviewsMovieById,\n};\n"],"names":["List","styled","StyledLink","NavLink","MovieList","movies","location","useLocation","pathname","search","map","id","name","title","to","state","from","size","length","prototype","PropTypes","isRequired","useState","setMovies","isLoading","setIsLoading","useEffect","fetchTrendMovies","then","responce","data","results","catch","error","console","style","marginLeft","fetchAxios","axios","baseURL","responseType","params","api_key","page","log","fetchMovieById","fetchCreditsMovieById","fetchReviewsMovieById","fetchMovieByQuery","query","include_adult"],"sourceRoot":""}