{"version":3,"file":"static/js/554.a2d53f85.chunk.js","mappings":"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","sources":["api.js","components/MovieItem/MovieItem.styled.jsx","components/MovieItem/MovieItem.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '092bcb29ccd47efc5792e9a4733d23fe';\n\nasync function fetchMovies() {\n  // eslint-disable-next-line no-undef\n  const responce = await axios(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n  return responce;\n}\nasync function fetchMoviesById(id) {\n  const responce = await axios(`${BASE_URL}movie/${id}?api_key=${API_KEY}`);\n  return responce;\n}\nasync function fetchMovieCredits(id) {\n  const responce = await axios(\n    `${BASE_URL}movie/${id}/credits?api_key=${API_KEY}`\n  );\n  return responce;\n}\n\nasync function fetchMovieReviews(id) {\n  const responce = await axios(\n    `${BASE_URL}movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  return responce;\n}\n\nasync function fetchSearchMovie(query) {\n  const responce = await axios(\n    `${BASE_URL}search/movie?query=${query}&api_key=${API_KEY}&page=1&include_adult=false`\n  );\n  return responce;\n}\n\nexport {\n  fetchMovies,\n  fetchMoviesById,\n  fetchMovieCredits,\n  fetchMovieReviews,\n  fetchSearchMovie,\n};\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Section = styled.section`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const StyledLinkBack = styled(NavLink)`\n  padding-left: 15px;\n  display: block;\n  margin-right: auto;\n  text-decoration: none;\n  color: #000000;\n\n  :hover,\n  :focus {\n    text-decoration: underline;\n  }\n`;\n\nexport const StyledLink = styled(NavLink)`\n  display: block;\n  margin-right: auto;\n  text-decoration: none;\n  color: #000000;\n\n  :hover {\n    text-decoration: underline;\n  }\n\n  &.active {\n    color: orange;\n    text-decoration: underline;\n  }\n`;\n\nexport const Box = styled.ul`\n  padding-left: 15px;\n  padding-bottom: 15px;\n  display: grid;\n  grid-gap: 10px;\n  grid-template-columns: 200px 1fr;\n  border-bottom: 3px solid #e9e9e9;\n\n  & img {\n    display: block;\n    width: 200px;\n    height: 300px;\n  }\n  & h2 {\n    margin-bottom: 30px;\n  }\n  & h3,\n  p {\n    margin-bottom: 15px;\n  }\n`;\n\nexport const BoxInfo = styled.ul`\n  padding-left: 15px;\n  display: flex;\n  gap: 4px;\n  padding-bottom: 15px;\n  flex-direction: column;\n  border-bottom: 3px solid #e9e9e9;\n`;\n","import { fetchMoviesById } from 'api';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport { Outlet, useLocation } from 'react-router-dom';\nimport {\n  Section,\n  StyledLinkBack,\n  StyledLink,\n  Box,\n  BoxInfo,\n} from './MovieItem.styled';\nimport { TiArrowBack } from 'react-icons/ti';\nimport { Loader } from 'components/Loader/Loader';\n\nconst MovieItem = data => {\n  const [movieId, setMovieId] = useState(null);\n\n  const location = useLocation();\n  const backLocation = useRef(location.state.from);\n  const id = location.state.id;\n\n  useEffect(() => {\n    fetchMoviesById(id).then(data => {\n      setMovieId(data.data);\n    });\n  }, [id]);\n\n  if (!movieId) {\n    return;\n  }\n\n  const pathImage = `https://image.tmdb.org/t/p/w500/${movieId.poster_path}`;\n  const votePercentage = Math.round(movieId.vote_average * 10);\n  const releaseDate = new Date(movieId.release_date);\n  const releaseYear = releaseDate.getFullYear();\n  const genres = movieId.genres.map(genre => genre.name).join(' ');\n\n  return (\n    <Section>\n      <StyledLinkBack to={backLocation.current}>\n        <TiArrowBack size=\"20\" />\n        Go back\n      </StyledLinkBack>\n\n      <Box>\n        <img src={pathImage} alt={movieId.title} loading=\"lazy\" />\n        <div>\n          <h2>\n            {movieId.title} ({releaseYear})\n          </h2>\n          <p>User Score: {votePercentage}%</p>\n          <h3> Overview</h3>\n          <p>{movieId.overview}</p>\n          <h3> Genres</h3>\n          <p>{genres}</p>\n        </div>\n      </Box>\n\n      <BoxInfo>\n        <h3>Additional information</h3>\n        <StyledLink to=\"cast\" state={{ from: { backLocation }, id: id }}>\n          Cast\n        </StyledLink>\n        <StyledLink to=\"reviews\" state={{ from: { backLocation }, id: id }}>\n          Reviews\n        </StyledLink>\n      </BoxInfo>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </Section>\n  );\n};\n\nexport default MovieItem;\n"],"names":["BASE_URL","API_KEY","fetchMovies","axios","responce","fetchMoviesById","id","fetchMovieCredits","fetchMovieReviews","fetchSearchMovie","query","Section","styled","StyledLinkBack","NavLink","StyledLink","Box","BoxInfo","data","useState","movieId","setMovieId","location","useLocation","backLocation","useRef","state","from","useEffect","then","pathImage","poster_path","votePercentage","Math","round","vote_average","releaseYear","Date","release_date","getFullYear","genres","map","genre","name","join","to","current","size","src","alt","title","loading","overview","Suspense","fallback","Loader"],"sourceRoot":""}