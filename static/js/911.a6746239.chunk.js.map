{"version":3,"file":"static/js/911.a6746239.chunk.js","mappings":"yOAEaA,E,QAAOC,GAAAA,GAAH,0O,SCqCjB,EAlCyB,WACvB,OAA8BC,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEMC,GADWC,EAAAA,EAAAA,MACGC,MAAMF,GAU1B,IARAG,EAAAA,EAAAA,YAAU,WACFL,IAINM,EAAAA,EAAAA,IAAsBJ,GAAIK,MAAK,SAAAC,GAAI,OAAIP,EAAWO,EAAKA,KAAKC,SAAW,GAApC,GACpC,GAAE,CAACP,EAAIF,IAEHA,EAIL,OACE,UAACH,EAAD,WACsB,IAAnBG,EAAQU,SACP,uEAEDV,EAAQW,KAAI,WAAsBC,GAAW,IAA9BC,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,QACtB,OACE,2BACE,qCAAaD,MACb,uBAAIC,MAFGF,EAKZ,MAGN,C,mMChCKG,E,MAAaC,GAAAA,OAAa,CAC9BC,QAJe,gCAKfC,aAAc,OACdC,OAAQ,CACNC,QANY,sC,SAWDC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,C,aAAf,O,oBAAA,6GAE2BN,EAAW,qBAAsB,CACtDI,OAAQ,CAAEG,KAAM,KAHtB,cAEUC,EAFV,yBAKWA,GALX,gCAOIC,QAAQC,IAAR,sCAPJ,yFAYeC,EAAe,GAAfA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,C,aAAf,O,oBAAA,WAA8BxB,GAA9B,gGAE2Ba,EAAW,SAAD,OAAUb,IAF/C,cAEUqB,EAFV,yBAGWA,GAHX,gCAKIC,QAAQC,IAAR,sCALJ,yFAUeE,EAAsB,GAAtBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,C,aAAf,O,oBAAA,WAAqCzB,GAArC,gGAE2Ba,EAAW,SAAD,OAAUb,EAAV,aAFrC,cAEUqB,EAFV,yBAGWA,GAHX,gCAKIC,QAAQC,IAAR,sCALJ,yFAUenB,EAAsB,GAAtBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,C,aAAf,O,oBAAA,WAAqCJ,GAArC,gGAE2Ba,EAAW,SAAD,OAAUb,EAAV,aAFrC,cAEUqB,EAFV,yBAGWA,GAHX,gCAKIC,QAAQC,IAAR,sCALJ,yFAUeG,EAAkB,GAAlBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAiCC,GAAjC,gGAE2Bd,EAAW,eAAgB,CAChDI,OAAQ,CAAEU,MAAAA,EAAOP,KAAM,EAAGQ,eAAe,KAH/C,cAEUP,EAFV,yBAKWA,GALX,gCAOIC,QAAQC,IAAR,sCAPJ,gF","sources":["components/MovieItem/MovieItemReviews/MovieItemReviews.styled.js","components/MovieItem/MovieItemReviews/MovieItemReviews.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  padding-left: 15px;\n  margin-bottom: 20px;\n  list-style-type: none;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n\n  & h3 {\n    margin-bottom: 8px;\n  }\n  & p {\n    font-size: 16px;\n  }\n`;\n","import { fetchReviewsMovieById } from 'services/api';\nimport { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { List } from './MovieItemReviews.styled';\n\nconst MovieItemReviews = () => {\n  const [reviews, setReviews] = useState(null);\n  const location = useLocation();\n  const id = location.state.id;\n\n  useEffect(() => {\n    if (!!reviews) {\n      return;\n    }\n\n    fetchReviewsMovieById(id).then(data => setReviews(data.data.results || []));\n  }, [id, reviews]);\n\n  if (!reviews) {\n    return;\n  }\n\n  return (\n    <List>\n      {reviews.length === 0 && (\n        <div>We don't have ant reviews for this movie.</div>\n      )}\n      {reviews.map(({ author, content }, index) => {\n        return (\n          <li key={index}>\n            <h3>Author: {author}</h3>\n            <p>{content}</p>\n          </li>\n        );\n      })}\n    </List>\n  );\n};\n\nexport default MovieItemReviews;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '092bcb29ccd47efc5792e9a4733d23fe';\n\nconst fetchAxios = axios.create({\n  baseURL: BASE_URL,\n  responseType: 'json',\n  params: {\n    api_key: API_KEY,\n  },\n});\n\n//Запит інформації про популярнці фільми за день\nasync function fetchTrendMovies() {\n  try {\n    const responce = await fetchAxios('trending/movie/day', {\n      params: { page: 1 },\n    });\n    return responce;\n  } catch (error) {\n    console.log(`Axios request failed ${error}`);\n  }\n}\n\n//запит інформації про фільм по id\nasync function fetchMovieById(id) {\n  try {\n    const responce = await fetchAxios(`movie/${id}`);\n    return responce;\n  } catch (error) {\n    console.log(`Axios request failed ${error}`);\n  }\n}\n\n//запит інформації про акторський склад для сторінки кінофільму по id\nasync function fetchCreditsMovieById(id) {\n  try {\n    const responce = await fetchAxios(`movie/${id}/credits`);\n    return responce;\n  } catch (error) {\n    console.log(`Axios request failed ${error}`);\n  }\n}\n\n//запит оглядів для сторінки кінофільму по id\nasync function fetchReviewsMovieById(id) {\n  try {\n    const responce = await fetchAxios(`movie/${id}/reviews`);\n    return responce;\n  } catch (error) {\n    console.log(`Axios request failed ${error}`);\n  }\n}\n\n//запит на пошук фільмів\nasync function fetchMovieByQuery(query) {\n  try {\n    const responce = await fetchAxios('search/movie', {\n      params: { query, page: 1, include_adult: false },\n    });\n    return responce;\n  } catch (error) {\n    console.log(`Axios request failed ${error}`);\n  }\n}\n\nexport {\n  fetchTrendMovies,\n  fetchMovieById,\n  fetchMovieByQuery,\n  fetchCreditsMovieById,\n  fetchReviewsMovieById,\n};\n"],"names":["List","styled","useState","reviews","setReviews","id","useLocation","state","useEffect","fetchReviewsMovieById","then","data","results","length","map","index","author","content","fetchAxios","axios","baseURL","responseType","params","api_key","fetchTrendMovies","page","responce","console","log","fetchMovieById","fetchCreditsMovieById","fetchMovieByQuery","query","include_adult"],"sourceRoot":""}